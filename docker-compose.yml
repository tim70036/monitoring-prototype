x-base-config: &base-config
  networks:
      - backend
  restart: unless-stopped
  logging:
    driver: json-file
    options:
      max-size: 10m
      max-file: '5'
      compress: 'true'

services:
  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=12w'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:?err}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:?err}
    volumes:
      - type: volume
        source: prometheus-storage
        target: /prometheus
      - type: bind
        source: ./prometheus
        target: /etc/prometheus
    ports:
      - 9090:9090
    <<: *base-config

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/loki.yml -print-config-stderr
    volumes:
      - type: volume
        source: loki-storage
        target: /loki
      - type: bind
        source: ./loki
        target: /etc/loki
    ports:
      - 3100:3100
    restart: unless-stopped
    <<: *base-config

  grafana:
    image: grafana/grafana:latest
    volumes:
      - type: volume
        source: grafana-storage
        target: /var/lib/grafana
      - type: bind
        source: ./grafana/provisioning
        target: /etc/grafana/provisioning
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    <<: *base-config

volumes:
  prometheus-storage: {}
  loki-storage: {}
  grafana-storage: {}


networks:
  backend:
    driver: bridge
